#%RAML 0.8
---
title: Rojak
version: v1
baseUri: https://api.rojak.com/v1
mediaType: application/json

resourceTypes:
  - collection:
      get:
        description: <<description>>
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleCollection>>
  - item:
      get:
        description: <<description>>
        responses:
          200:
            body:
              application/json:
                example: |
                  <<exampleItem>>
          404:
            body:
              application/json:
                example: |
                  { "message" : "item not found" }

traits:
  - pageable:
      queryParameters:
        offset:
          description: Skip over a number of elements by specifying an offset value for the query.
          type: integer
          required: false
          example: "?offset=20"
          default: 0
        limit:
          description: Limit the number of elements on the response.
          type: integer
          required: false
          example: "?limit=20"
          default: 10
  - embeddable:
      queryParameters:
        embed:
          description: |
            Fields to embed on the response. Available fields: <<availableFields>>
          type: string
          required: false
          example: "?embed=field1[,field2,...]"

/pairings:
  type:
    collection:
      description: Get a list of pairs of candidates running in the election, optionally with sentiments.
      exampleCollection: !include examples/pairing-list.sample
  get:
    is: [ embeddable: { availableFields: "`sentiments`" } ]
  /{pairingId}:
    type:
      item:
        description: Get a pair of candidates based on {pairingId}, optionally with sentiments and candidates.
        exampleItem: !include examples/pairing.sample
    get:
      is: [ embeddable: { availableFields: "`sentiments`, `candidates`" } ]
    /media-sentiments:
      type:
        collection:
          description: Get a breakdown of media sentiments for this pairing.
          exampleCollection: !include examples/pairing-candidate-sentiments.sample
      get:
        is: [ pageable ]

/candidates:
  type:
    collection:
      description: Get a list of candidates running in the election, optionally with sentiments.
      exampleCollection: !include examples/candidate-list.sample
  get:
    is: [ embeddable: { availableFields: "`sentiments`" } ]
  /{candidateId}:
    type:
      item:
        description: Get a candidates based on {candidateId}, optionally with sentiments and pairing.
        exampleItem: !include examples/candidate.sample
    get:
      is: [ embeddable: { availableFields: "`sentiments`, `pairing`" } ]
    /media-sentiments:
      type:
        collection:
          description: Get a breakdown of media sentiments for this candidate.
          exampleCollection: !include examples/pairing-candidate-sentiments.sample
      get:
        is: [ pageable ]

/news:
  type:
    collection:
      description: Get a list of news, optionally with mentioned candidates. Filterable by media and mentioned candidates.
      exampleCollection: !include examples/news-list.sample
  get:
    is: [ pageable, embeddable: { availableFields: "`mentions`" } ]
    queryParameters:
      media_id:
        description: Filter articles based on `id` of media.
        type: integer
        required: false
        repeat: true
        example: "?media_id=1&media_id=2"
      candidate_id:
        description: Filter articles based on `id` of mentioned candidates.
        type: integer
        required: false
        repeat: true
        example: "?candidate_id=1&candidate_id=2"

  /{newsId}:
    type:
      item:
        description: Get a news article based on {newsId}, optionally with mentioned candidates.
        exampleItem: !include examples/news.sample
    get:
      is: [ embeddable: { availableFields: "`mentions`" } ]

/media:
  type:
    collection:
      description: Get a list of media.
      exampleCollection: !include examples/media-list.sample
  get:
    is: [ pageable ]
  /{mediaId}:
    type:
      item:
        description: Get a media based on {mediaId}.
        exampleItem: !include examples/media.sample
    /sentiments:
      type:
        collection:
          description: Get a breakdown of sentiments for each pairing and candidate by this media.
          exampleCollection: !include examples/media-sentiments.sample

