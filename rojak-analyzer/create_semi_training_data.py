# Semi Training Data is a training data created by Rojak itself
# The training data generated by this should be check first before
# using it
import os
import sys
import csv

import MySQLdb as mysql

from rojak_ovr_pair import RojakOvRPair

MEDIA_NAME = os.getenv('MEDIA_NAME', 'cnnindonesia')
MODEL_NAME = os.getenv('MODEL_NAME', 
    'rojak_ovr_pair_latest_trigram_model.bin')
THRESHOLD = float(os.getenv('THRESHOLD', 0.5))
ROJAK_DB_HOST = os.getenv('ROJAK_DB_HOST', 'localhost')
ROJAK_DB_PORT = int(os.getenv('ROJAK_DB_PORT', 3306))
ROJAK_DB_USER = os.getenv('ROJAK_DB_USER', 'root')
ROJAK_DB_PASS = os.getenv('ROJAK_DB_PASS', 'rojak')
ROJAK_DB_NAME = os.getenv('ROJAK_DB_NAME', 'rojak_database')

if __name__ == '__main__':
    # Initialize rojak
    rojak = RojakOvRPair()
    rojak.load_model(MODEL_NAME)

    # Open database connection
    db = mysql.connect(host=ROJAK_DB_HOST, port=ROJAK_DB_PORT,
            user=ROJAK_DB_USER, passwd=ROJAK_DB_PASS,
            db=ROJAK_DB_NAME)

    # Create new db cursor
    cursor = db.cursor()
    # SQL queries to get media ID
    sql_get_media_id = '''
        select id from media where name=%s
    '''
    cursor.execute(sql_get_media_id, [MEDIA_NAME])
    try:
        result = cursor.fetchone()
        media_id = result[0]
    except mysql.Error as err:
        print 'Unable to fetch media ID', err
        sys.exit()

    # SQL queries to get the number of news
    sql_get_news_count = '''
        select count(*) from news where media_id=%s
    '''
    cursor.execute(sql_get_news_count, [media_id])
    try:
        result = cursor.fetchone()
        news_count = result[0]
    except mysql.Error as err:
        print 'Unable to fetch news count', err
        sys.exit()

    # Create csv
    file_name = 'data_{}_{}_7_class_threshold_{}_semi_labelled.csv'.format(
        MEDIA_NAME, news_count, THRESHOLD)
    fields = ['title', 'raw_content', 'predicted_labels', 'labels']
    csv_writer = csv.DictWriter(open(file_name, 'w'), fields)
    csv_writer.writeheader()

    # Get all news and predict each one
    sql_get_news = '''
        select title,raw_content from news where media_id=%s
    '''
    cursor.execute(sql_get_news, [media_id])
    for i in xrange(news_count):
        try:
            result = cursor.fetchone()
            title = result[0]
            raw_content = result[1]
        except mysql.Error as err:
            print 'Unable to get news'
            continue
        raw_text = '{} {}'.format(title, raw_content)
        pred = rojak.predict_proba(raw_text, threshold=THRESHOLD)
        print '=== start DEBUG'
        print title
        print pred['labels']
        print pred['confident_score']
        print '=== end DEBUG'
        label_str = ','.join(pred['labels'])
        data = {'title': title, 'raw_content': raw_content, 
            'predicted_labels': label_str}
        csv_writer.writerow(data)

    print file_name, 'created'




